[gcode_macro _SET_ACCEL]
gcode:
    {% set printer_config = printer.configfile.settings['printer'] %}
    {% set s = params.ACCEL|default(printer_config.max_accel)|float %}
    SET_VELOCITY_LIMIT ACCEL={s}

[gcode_macro _RAISE_Z]
description: Drop the bed by AMOUNT to prevent dragging
gcode:
    {% set curr_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = curr_z + params.AMOUNT|default(10)|float %}

    G90 ; absolute
    G1 Z { [target_z, max_z]|min }

[gcode_macro _CLEAR_Z]
description: Drop Z by at least up to AMOUNT to leave room for stuff
gcode:
    {% set curr_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = [curr_z, params.AMOUNT|default(10)|float]|max %}

    G90 ; absolute
    G1 Z { [target_z, max_z]|min }

[gcode_macro PRINT_START]
gcode:
    #SET_FAN_SPEED FAN=board_fan SPEED=0.5

    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    M140 S{bedtemp}
    M104 S{hotendtemp * 0.7}
    G28

    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedtemp * 0.95} MAXIMUM={bedtemp * 1.05}
    BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1
    M109 S{hotendtemp}


#[gcode_macro SHAPER_CALIBRATE]
#rename_existing: RESHAPER_CALIBRATE
#gcode:
#    RESHAPER_CALIBRATE FREQ_START=20 FREQ_END=150

[gcode_macro DISABLE_FANS_AND_HEATERS]
gcode:
    M106 P2 S0
    M106 P0 S0
    M106 P3 S0

    M104 S0
    M140 S0
    #M141 S0

[gcode_macro PRINT_END]
gcode:
    _RAISE_Z AMOUNT=10  ; drop z by  10 to keep part away from nozzle
    _CLEAR_Z AMOUNT=150 ; drop z to 150 for easy build plate removal

    G1 X0 Y0 F7800

    CLEAR_PAUSE

    DISABLE_FANS_AND_HEATERS

    M220 S100 #reset speed factor
    M221 S100 #reset extrude factor

    M84

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PRINT_END
    BASE_CANCEL_PRINT


#[gcode_macro M106]
#description: set fan speed (aux/cooling/circulation)
#gcode:
#    {% set p = params.P|default(0)|int %}
#
#    {% if p == 2 %}
#    {% if params.S is defined %}
#        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED={(params.S|float / 255.0)}
#    {% else %}
#        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED=1
#    {% endif %}
#    {% endif %}
#
#    {% if p == 0 %}
#    {% if params.S is defined %}
#        SET_FAN_SPEED FAN=cooling_fan SPEED={(params.S|float / 255.0)}
#    {% else %}
#        SET_FAN_SPEED FAN=cooling_fan SPEED=1
#    {% endif %}
#    {% endif %}#
#
#    {% if p == 3 %}
#    {% if params.S is defined %}
#        SET_FAN_SPEED FAN=chamber_circulation_fan SPEED={(params.S|float / 255.0)}
#    {% else %}
#        SET_FAN_SPEED FAN=chamber_circulation_fan SPEED=1
#    {% endif %}
#    {% endif %}

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M204]
rename_existing: M99204
gcode:
    {% if params.S is defined %}
        {% set s = params.S|float %}
    {% endif %}
    {% if params.P is defined %}
    {% if params.T is defined %}
        {% set s = [params.P|float ,params.T|float] | min %}
    {% endif %}
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={s}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={s/2}

[gcode_macro _ERROR]
gcode:
    {% set err = params.MSG|string %}
    M118 {err}
    CANCEL_PRINT